Testing ``matrix_divided()`` function.

Test divisor is of the right type.
::

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided
    >>> matrix = [[1,2,3], [4,5,6]]
    
    >>> matrix_divided(matrix, 2 + 4j)   #doctest: +IGNORE_EXCEPTION_DETAIL
    Traceback (most recent call last):
    TypeError:

    >>> matrix_divided(matrix, True)    #doctest: +IGNORE_EXCEPTION_DETAIL
    Traceback (most recent call last):
    TypeError:

    >>> matrix_divided(matrix, 'boy')   #doctest: +IGNORE_EXCEPTION_DETAIL
    Traceback (most recent call last):
    TypeError:


Test divisor always has the right value
::

    >>> matrix = [[1,2,3], [4,5,6]]
    
    >>> matrix_divided(matrix, 0)   #doctest: +IGNORE_EXCEPTION_DETAIL
    Traceback (most recent call last):
    ZeroDivisionError: 

    >>> matrix_divided(matrix, float('inf'))    #doctest: +IGNORE_EXCEPTION_DETAIL
    Traceback (most recent call last):
    OverflowError:

    >>> matrix_divided(matrix, float('nan'))    #doctest: +IGNORE_EXCEPTION_DETAIL
    Traceback (most recent call last):
    ValueError:


Test matrix is of the right type.
::
    >>> correct_matrix = [[1,2.5,3], [4,5.5,6]]
    >>> irregular_matrix = [[1,2,3], [4,5,6,7]]    
    >>> not_matrix = [1,2,3]
    >>> matrix_not_only_integers = [['a', 1, 4 + 2j], [1.5, 4, 'girl']]

    >>> matrix_divided(correct_matrix, 2)
    [[0.5, 1.25, 1.5], [2.0, 2.75, 3.0]]

    >>> matrix_divided(irregular_matrix, 2)
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size

    >>> matrix_divided(not_matrix, 2)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided(matrix_not_only_integers, 2)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats
    
    

Test original matrix is not mutated and new matrix is returned
::

    >>> matrix = [[1,2.5,3], [4,5.5,6]]
    >>> matrix_divided(matrix, 2) is matrix
    False


Test result is correct and floats are rounded
::

    >>> matrix = [[1,2.5,3], [4,5.5,6]]
    >>> matrix_divided(matrix, 2)
    [[0.5, 1.25, 1.5], [2.0, 2.75, 3.0]]

    >>> matrix_divided(matrix, 1.5)
    [[0.67, 1.67, 2.0], [2.67, 3.67, 4.0]]
